diff --git a/lib/Evaluator.py b/lib/Evaluator.py
index ae6c23e..93fd464 100644
--- a/lib/Evaluator.py
+++ b/lib/Evaluator.py
@@ -63,14 +63,16 @@ class Evaluator:
                 groundTruths.append([
                     bb.getImageName(),
                     bb.getClassId(), 1,
-                    bb.getAbsoluteBoundingBox(BBFormat.XYX2Y2)
+                    # bb.getAbsoluteBoundingBox(BBFormat.XYX2Y2)
+                    bb.getAbsoluteBoundingBox(BBFormat.XYWH)
                 ])
             else:
                 detections.append([
                     bb.getImageName(),
                     bb.getClassId(),
                     bb.getConfidence(),
-                    bb.getAbsoluteBoundingBox(BBFormat.XYX2Y2)
+                    # bb.getAbsoluteBoundingBox(BBFormat.XYX2Y2)
+                    bb.getAbsoluteBoundingBox(BBFormat.XYWH)
                 ])
             # get class
             if bb.getClassId() not in classes:
@@ -106,22 +108,28 @@ class Evaluator:
                 iouMax = sys.float_info.min
                 for j in range(len(gt)):
                     # print('Ground truth gt => %s' % (gt[j][3],))
-                    iou = Evaluator.iou(dects[d][3], gt[j][3])
+                    # iou = Evaluator.iou(dects[d][3], gt[j][3])
+                    iou = Evaluator.iou_yolo(dects[d][3], gt[j][3])
                     if iou > iouMax:
                         iouMax = iou
                         jmax = j
+                        print ("{}.jpg: {}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:3.4f} Truth".format(dects[d][0], dects[d][1], dects[d][2], gt[j][3][0], gt[j][3][1], gt[j][3][2], gt[j][3][3], iouMax))
                 # Assign detection as true positive/don't care/false positive
                 if iouMax >= IOUThreshold:
                     if det[dects[d][0]][jmax] == 0:
                         TP[d] = 1  # count as true positive
                         det[dects[d][0]][jmax] = 1  # flag as already 'seen'
+                        print ("{}.jpg: {}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:3.4f} TP".format(dects[d][0], dects[d][1], dects[d][2], dects[d][3][0], dects[d][3][1], dects[d][3][2], dects[d][3][3], iouMax))
                         # print("TP")
                     else:
                         FP[d] = 1  # count as false positive
+                        print ("{}.jpg: {}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:3.4f} FP".format(dects[d][0], dects[d][1], dects[d][2], dects[d][3][0], dects[d][3][1], dects[d][3][2], dects[d][3][3], iouMax))
+                        # print(f'')
                         # print("FP")
                 # - A detected "cat" is overlaped with a GT "cat" with IOU >= IOUThreshold.
                 else:
                     FP[d] = 1  # count as false positive
+                    print ("{}.jpg: {}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:2.4f}, {:3.4f} FP".format(dects[d][0], dects[d][1], dects[d][2], dects[d][3][0], dects[d][3][1], dects[d][3][2], dects[d][3][3], iouMax))
                     # print("FP")
             # compute precision, recall and average precision
             acc_FP = np.cumsum(FP)
@@ -145,6 +153,8 @@ class Evaluator:
                 'total TP': np.sum(TP),
                 'total FP': np.sum(FP)
             }
+            # print (f'Class={c}, Total Positive={npos} TP={np.sum(TP)}, FP={np.sum(FP)}, Precision={mpre}, Reacll={mrec}')
+            print (f'Class={c}, Total Positive={npos} TP={np.sum(TP)}, FP={np.sum(FP)}')
             ret.append(r)
         return ret
 
@@ -393,6 +403,18 @@ class Evaluator:
         assert iou >= 0
         return iou
 
+    @staticmethod
+    def iou_yolo(boxA, boxB):
+        if Evaluator._boxesIntersect_yolo(boxA, boxB) is False:
+            return 0
+        interArea = Evaluator._getIntersectionArea_yolo(boxA, boxB)
+        union = Evaluator._getUnionAreas_yolo(boxA, boxB, interArea=interArea)
+        # intersection over union
+        iou = interArea / union
+        assert iou >= 0
+        return iou
+
+
     # boxA = (Ax1,Ay1,Ax2,Ay2)
     # boxB = (Bx1,By1,Bx2,By2)
     @staticmethod
@@ -407,6 +429,19 @@ class Evaluator:
             return False  # boxA is below boxB
         return True
 
+    @staticmethod
+    def _boxesIntersect_yolo(boxA, boxB):
+        if boxA[0]-(boxA[2]/2) > boxB[0]+(boxB[2]/2):
+            return False  # boxA is right of boxB
+        if boxA[0]+(boxA[2]/2) < boxB[0]-(boxB[2]/2):
+            return False  # boxA is left of boxB
+        if boxA[1]+(boxA[3]/2) < boxB[1]-(boxB[3]/2):
+            return False  # boxA is above boxB
+        if boxA[1]-(boxA[3]/2) > boxB[1]+(boxB[3]/2):
+            return False  # boxA is below boxB
+        return True
+
+
     @staticmethod
     def _getIntersectionArea(boxA, boxB):
         xA = max(boxA[0], boxB[0])
@@ -415,6 +450,16 @@ class Evaluator:
         yB = min(boxA[3], boxB[3])
         # intersection area
         return (xB - xA + 1) * (yB - yA + 1)
+    
+    @staticmethod
+    def _getIntersectionArea_yolo(boxA, boxB):
+        xA = max(boxA[0]-(boxA[2]/2), boxB[0]-(boxB[2]/2)) #left
+        yA = max(boxA[1]-(boxA[3]/2), boxB[1]-(boxB[3]/2)) # top
+        xB = min(boxA[0]+(boxA[2]/2), boxB[0]+(boxB[2]/2)) # right
+        yB = min(boxA[1]+(boxA[3]/2), boxB[1]+(boxB[3]/2)) # bottom
+        # intersection area
+        return (xB - xA ) * (yB - yA)
+    
 
     @staticmethod
     def _getUnionAreas(boxA, boxB, interArea=None):
@@ -423,7 +468,20 @@ class Evaluator:
         if interArea is None:
             interArea = Evaluator._getIntersectionArea(boxA, boxB)
         return float(area_A + area_B - interArea)
+    
+    @staticmethod
+    def _getUnionAreas_yolo(boxA, boxB, interArea=None):
+        area_A = Evaluator._getArea_yolo(boxA)
+        area_B = Evaluator._getArea_yolo(boxB)
+        if interArea is None:
+            interArea = Evaluator._getIntersectionArea_yolo(boxA, boxB)
+        return float(area_A + area_B - interArea)    
 
     @staticmethod
     def _getArea(box):
         return (box[2] - box[0] + 1) * (box[3] - box[1] + 1)
+
+
+    @staticmethod
+    def _getArea_yolo(box):
+        return box[2]* box[3]
diff --git a/pascalvoc.py b/pascalvoc.py
index c6abf73..2c9e7de 100644
--- a/pascalvoc.py
+++ b/pascalvoc.py
@@ -159,6 +159,8 @@ def getBoundingBoxes(directory,
                 idClass = (splitLine[0])  # class
                 x = float(splitLine[1])
                 y = float(splitLine[2])
+                # x = float(splitLine[1]) - float(splitLine[3])/float(2.0)
+                # y = float(splitLine[2]) - float(splitLine[4])/float(2.0)
                 w = float(splitLine[3])
                 h = float(splitLine[4])
                 bb = BoundingBox(nameOfImage,
@@ -174,9 +176,11 @@ def getBoundingBoxes(directory,
             else:
                 # idClass = int(splitLine[0]) #class
                 idClass = (splitLine[0])  # class
-                confidence = float(splitLine[1])
+                confidence = float(splitLine[1]) # confidence
                 x = float(splitLine[2])
                 y = float(splitLine[3])
+                # x = 0 if (float(splitLine[2]) - float(splitLine[4])/float(2.0) < 0)  else float(splitLine[2]) - float(splitLine[4])/float(2.0)
+                # y = 0 if (float(splitLine[3]) - float(splitLine[5])/float(2.0) < 0)   else float(splitLine[3]) - float(splitLine[5])/float(2.0)
                 w = float(splitLine[4])
                 h = float(splitLine[5])
                 bb = BoundingBox(nameOfImage,
@@ -378,7 +382,7 @@ detections = evaluator.PlotPrecisionRecallCurve(
     IOUThreshold=iouThreshold,  # IOU threshold
     method=MethodAveragePrecision.EveryPointInterpolation,
     showAP=True,  # Show Average Precision in the title of the plot
-    showInterpolatedPrecision=False,  # Don't plot the interpolated precision curve
+    showInterpolatedPrecision=True,  # Don't plot the interpolated precision curve
     savePath=savePath,
     showGraphic=showPlot)
 
diff --git a/results/person.png b/results/person.png
deleted file mode 100644
index 3bc5502..0000000
Binary files a/results/person.png and /dev/null differ
diff --git a/results/person_11-pointInterpolation.png b/results/person_11-pointInterpolation.png
deleted file mode 100644
index ac5f362..0000000
Binary files a/results/person_11-pointInterpolation.png and /dev/null differ
diff --git a/results/results.txt b/results/results.txt
index dfd4414..9b2c3e0 100644
--- a/results/results.txt
+++ b/results/results.txt
@@ -4,10 +4,10 @@ https://github.com/rafaelpadilla/Object-Detection-Metrics
 
 Average Precision (AP), Precision and Recall per class:
 
-Class: person
-AP: 24.57%
-Precision: ['1.00', '0.50', '0.67', '0.50', '0.40', '0.33', '0.29', '0.25', '0.22', '0.30', '0.27', '0.33', '0.38', '0.43', '0.40', '0.38', '0.35', '0.33', '0.32', '0.30', '0.29', '0.27', '0.30', '0.29']
-Recall: ['0.07', '0.07', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.20', '0.20', '0.27', '0.33', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.47', '0.47']
+Class: 0
+AP: 87.33%
+Precision: ['1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '1.00', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99', '0.99']
+Recall: ['0.00', '0.00', '0.00', '0.00', '0.00', '0.00', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.01', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.02', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.03', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.04', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.05', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.06', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.07', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.08', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.09', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.10', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.11', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.12', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.13', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.14', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.15', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.16', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.17', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.18', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.19', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.20', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.21', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.22', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.23', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.24', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.25', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.26', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.27', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.28', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.29', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.30', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.31', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.32', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.33', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.34', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.35', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.36', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.37', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.38', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.39', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.40', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.41', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.42', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.43', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.44', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.45', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.46', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.47', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.48', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.49', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.50', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.51', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.52', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.53', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.54', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.55', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.56', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.57', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.58', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.59', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.60', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.61', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.62', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.63', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.64', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.65', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.66', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.67', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.68', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.69', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.70', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.71', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.72', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.73', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.74', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.75', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.76', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.77', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.78', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.79', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.80', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.81', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.82', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.83', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.84', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.85', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.86', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87', '0.87']
 
 
-mAP: 24.57%
\ No newline at end of file
+mAP: 87.33%
\ No newline at end of file
